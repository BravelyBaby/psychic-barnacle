name: CLA labeler

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  label-cla:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
    steps:
      - name: Check PR for attached signed CLA and add/remove label
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.pull_request.number;
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            // list files changed in the PR
            const files = await github.rest.pulls.listFiles({ owner, repo, pull_number: prNumber });
            const claFile = files.data.find(f => /(^|\/)CLA-[^\/]+\.md$/i.test(f.filename));
            let signed = false;
            if (claFile) {
              // fetch file contents from PR head
              const ref = context.payload.pull_request.head.sha;
              try {
                const contentResp = await github.rest.repos.getContent({ owner, repo, path: claFile.filename, ref });
                let content = '';
                if (contentResp && contentResp.data && !Array.isArray(contentResp.data)) {
                  content = Buffer.from(contentResp.data.content, contentResp.data.encoding).toString();
                  signed = /<!--\s*CLA-SIGNED:\s*true\s*-->/i.test(content);
                }
              } catch (err) {
                console.log('Could not fetch CLA file content:', err.message);
              }
            }

            const labelName = 'cla/present';
            // ensure the label exists
            try {
              await github.rest.issues.getLabel({ owner, repo, name: labelName });
            } catch (e) {
              // create label if missing
              try {
                await github.rest.issues.createLabel({ owner, repo, name: labelName, color: '0e8a16', description: 'Signed CLA file attached to PR' });
                console.log('Created label', labelName);
              } catch (err) {
                console.log('Could not create label:', err.message);
              }
            }

            const currentLabels = context.payload.pull_request.labels.map(l => l.name);
            if (signed) {
              if (!currentLabels.includes(labelName)) {
                await github.rest.issues.addLabels({ owner, repo, issue_number: prNumber, labels: [labelName] });
                console.log('Added', labelName);
              } else {
                console.log(labelName, 'already present');
              }
            } else {
              if (currentLabels.includes(labelName)) {
                try {
                  await github.rest.issues.removeLabel({ owner, repo, issue_number: prNumber, name: labelName });
                  console.log('Removed', labelName);
                } catch (err) {
                  console.log('Could not remove label:', err.message);
                }
              } else {
                console.log('No signed CLA present; no label changes needed.');
              }
            }